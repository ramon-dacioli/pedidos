unit uDmProduto;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, uProdutoModel, uDmConexao;

type
  TDmProdutos = class(TDataModule)
    qryPesquisar: TFDQuery;
  private
    { Private declarations }
  public
    { Public declarations }
    procedure Pesquisar(sNome: string);
    procedure PesquisarCodigo(sCodigo: Integer);
    procedure CarregarProduto (oProduto: TProduto; iCodigo: Integer);
  end;

var
  DmProdutos: TDmProdutos;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TDmProdutos }

procedure TDmProdutos.CarregarProduto(oProduto: TProduto; iCodigo: Integer);
begin
  qryPesquisar.SQL.Text := 'SELECT * FROM produtos WHERE codigo = :codigo';
  qryPesquisar.ParamByName('codigo').AsInteger := iCodigo;
  qryPesquisar.Open;

  if not qryPesquisar.IsEmpty then
  begin
    oProduto.Codigo := qryPesquisar.FieldByName('codigo').AsInteger;
    oProduto.Descricao := qryPesquisar.FieldByName('descricao').AsString;
    oProduto.PrecoVenda := qryPesquisar.FieldByName('preco_venda').AsString;
  end;

  qryPesquisar.Close;

end;

procedure TDmProdutos.Pesquisar(sNome: string);
begin
  qryPesquisar.SQL.Text := 'SELECT * FROM produtos WHERE nome LIKE :Nome';
  qryPesquisar.ParamByName('Nome').AsString := '%' + sNome + '%';
  qryPesquisar.Open;
end;

procedure TDmProdutos.PesquisarCodigo(sCodigo: Integer);
begin
  qryPesquisar.SQL.Text := 'SELECT * FROM produtos WHERE codigo LIKE :Codigo';
  qryPesquisar.ParamByName('Codigo').AsString := '%' + sCodigo + '%';
  qryPesquisar.Open;
end;

end.
