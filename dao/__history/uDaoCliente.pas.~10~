unit uDaoCliente;

interface

uses
  SysUtils, Classes, DB, FireDAC.Comp.Client, FireDAC.Stan.Param, uClienteModel,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  FireDAC.Comp.DataSet, Datasnap.DBClient;

type
  TDaoCliente = class
    qryPesquisar: TFDQuery;
    qryInserir: TFDQuery;
    qryAlterar: TFDQuery;
    qryExcluir: TFDQuery;
    DaoCliente: TDaoCliente;
  private
    { Private declarations }
  public
    procedure Pesquisar(sNome: string);
    procedure CarregarCliente (oCliente: TCliente; iCodigo: Integer);
  end;

implementation

{ TDaoCliente }

procedure TDaoCliente.CarregarCliente(oCliente: TCliente; iCodigo: Integer);
begin
  qryPesquisar.SQL.Text := 'SELECT * FROM clientes WHERE codigo = :codigo';
  qryPesquisar.ParamByName('codigo').AsInteger := iCodigo;
  qryPesquisar.Open;

  if not qryPesquisar.IsEmpty then
  begin
    oCliente.Codigo := qryPesquisar.FieldByName('codigo').AsInteger;
    oCliente.Nome := qryPesquisar.FieldByName('nome').AsString;
    oCliente.Cidade := qryPesquisar.FieldByName('cidade').AsString;
    oCliente.UF := qryPesquisar.FieldByName('uf').AsString;
  end;

  qryPesquisar.Close;
end;

procedure TDaoCliente.Pesquisar(sNome: string);
begin
  qryPesquisar.SQL.Text := 'SELECT * FROM clientes WHERE nome LIKE :Nome';
  qryPesquisar.ParamByName('Nome').AsString := '%' + sNome + '%';
  qryPesquisar.Open;
end;

end.
