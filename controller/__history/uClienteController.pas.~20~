unit uClienteController;

interface

uses
  uClienteModel;

type
  TClienteController = class
  private
    FCliente: TCliente;
  public
    constructor Create;
    destructor Destroy; override;
    procedure Pesquisar (sNome: string);
    procedure CarregarCliente (oCliente: TCliente; iCodigo: Integer);
    procedure CarregaDados(oCodigo: Integer);
    function GetCodigo: Integer;
    procedure SetCodigo(const Value: Integer);
  end;

implementation

uses uDmCliente, SysUtils;

{ TClienteController }


procedure TClienteController.CarregaDados(oCodigo: Integer);
begin
  FCliente.Codigo := oCodigo;
end;

procedure TClienteController.CarregarCliente(oCliente: TCliente;
  iCodigo: Integer);
begin
  DmCliente.CarregarCliente(oCliente, iCodigo);
end;

constructor TClienteController.Create;
begin
  FCliente := TCliente.Create;
end;

destructor TClienteController.Destroy;
begin
  FCliente.Free;
  inherited;
end;

function TClienteController.GetCodigo: Integer;
begin
  Result := FCliente.Codigo;
end;

//constructor TClienteController.Create;
//begin
//  DmCliente := TDmCliente.Create(nil);
//end;

//destructor TClienteController.Destroy;
//begin
//  FreeAndNil(DmCliente);
// inherited;
//end;

procedure TClienteController.Pesquisar(sNome: string);
begin
  DmCliente.Pesquisar(sNome);
end;

procedure TClienteController.SetCodigo(const Value: Integer);
begin
  FCliente.Codigo := Value;
end;

end.
