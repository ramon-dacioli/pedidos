unit uProdutoController;

interface

uses
  uProdutoModel;

type
  TProdutoController = class
  private
    FProduto: TProduto;
  public
    //constructor Create;
    //destructor Destroy; override;
    procedure Pesquisar(sDescricao: string);
    procedure PesquisarCodigo(sCodigo: Integer);
    procedure CarregarProduto(oProduto: TProduto; iCodigo: Integer);

    function ObterCodigo: Integer;
    procedure DefinirCodigo(const Value: Integer);

  end;

implementation

uses uDmProduto, SysUtils;

{ TProdutoController }

procedure TProdutoController.CarregarProduto(oProduto: TProduto; iCodigo: Integer);
begin
  DmProdutos.CarregarProduto(oProduto, iCodigo);
end;

procedure TProdutoController.DefinirCodigo(const Value: Integer);
begin
  FProduto.Codigo := Value;
end;

function TProdutoController.ObterCodigo: Integer;
begin
  Result := FProduto.Codigo;
end;

//constructor TProdutoController.Create;
//begin
//  DmProduto := TDmProduto.Create(nil);
//end;

//destructor TProdutoController.Destroy;
//begin
//  FreeAndNil(DmProduto);
// inherited;
//end;

procedure TProdutoController.Pesquisar(sDescricao: string);
begin
  DmProdutos.Pesquisar(sDescricao);
end;

procedure TProdutoController.PesquisarCodigo(sCodigo: Integer);
begin
  DmProdutos.PesquisarCodigo(sCodigo);
end;

end.

